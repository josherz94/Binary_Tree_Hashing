#BlueJ class context
comment0.target=ObjectBinaryTree
comment0.text=\r\n\ ObjectBinaryTree\ class.\r\n\ ObjectBinaryTree\ contains\ methods\ to\ create,\ and\ iterate\ through\ a\ binary\r\n\ search\ tree.\ Also\ contains\ methods\ to\ get\ the\ root\ of\ a\ BST\ and\ delete\ a\ \r\n\ node\ from\ a\ BST.\r\n
comment1.params=
comment1.target=ObjectBinaryTree()
comment1.text=\r\n\ no\ arg\ Constructor\ of\ class\ ObjectBinaryTree.\r\n\ sets\ the\ root\ node\ of\ the\ BST\ to\ null.\r\n
comment10.params=tree
comment10.target=void\ postTrav(ObjectTreeNode)
comment10.text=\r\n\ Utilizes\ the\ postorder\ traversal\ method\ to\ search\ the\ BST.\ \r\n\ \r\n\ @param\ \ \ ObjectTreeNode\ to\ start\ the\ traversal\ from.\r\n
comment11.params=o
comment11.target=void\ delete(java.lang.Object)
comment11.text=\r\n\ Deletes\ an\ Object\ from\ the\ BST.\ \r\n\ \r\n\ @param\ \ \ Object\ to\ delete\ from\ the\ BST.\r\n
comment2.params=
comment2.target=ObjectTreeNode\ getRoot()
comment2.text=\r\n\ Returns\ the\ root\ ObjectTreeNode\ of\ the\ ObjectBinaryTree.\r\n\ \r\n\ @return\ \ root\ ObjectTreeNode\ of\ a\ ObjectBinaryTree\r\n
comment3.params=parent\ r
comment3.target=void\ setLeftChild(ObjectTreeNode,\ ObjectTreeNode)
comment3.text=\r\n\ Sets\ the\ left\ child\ of\ a\ ObjectTreeNode\ parent\ to\ another\ ObjectTreeNode\r\n\ that\ is\ passed\ in.\r\n\ \r\n\ @param\ \ \ ObjectTreeNode\ child\ and\ the\ ObjectTreeNode\ parent\ for\ it\ to\ be\ set\ to.\r\n
comment4.params=parent\ r
comment4.target=void\ setRightChild(ObjectTreeNode,\ ObjectTreeNode)
comment4.text=\r\n\ Sets\ the\ right\ child\ of\ a\ ObjectTreeNode\ parent\ to\ another\ ObjectTreeNode\r\n\ that\ is\ passed\ in.\r\n\ \r\n\ @param\ \ \ ObjectTreeNode\ child\ and\ the\ ObjectTreeNode\ parent\ for\ it\ to\ be\ set\ to.\r\n
comment5.params=o
comment5.target=void\ insertBST(java.lang.Object)
comment5.text=\r\n\ Inserts\ an\ Object\ into\ the\ Binary\ Search\ tree.\r\n\ first\ inserts\ the\ Object\ into\ the\ info\ field\ of\ an\ ObjectTreeNode\r\n\ and\ then\ sets\ that\ node\ to\ the\ left\ child\ or\ right\ child\ of\ another\r\n\ node\ based\ on\ how\ it\ compares\ to\ it.\ Utilizes\ TreeComparable\ interface\r\n\ to\ do\ so.\r\n\ \r\n\ @param\ \ \ Object\ to\ be\ inserted\ into\ the\ BST\r\n
comment6.params=o
comment6.target=void\ insertBSTDup(java.lang.Object)
comment6.text=\r\n\ Inserts\ an\ Object\ into\ the\ Binary\ Search\ tree.\r\n\ first\ inserts\ the\ Object\ into\ the\ info\ field\ of\ an\ ObjectTreeNode\r\n\ and\ then\ sets\ that\ node\ to\ the\ left\ child\ or\ right\ child\ of\ another\r\n\ node\ based\ on\ how\ it\ compares\ to\ it.\ Utilizes\ TreeComparable\ interface\r\n\ to\ do\ so.\r\n\ \r\n\ Unlike\ the\ insertBST\ method,\ insertBSTDup\ takes\ into\ account\ for\ \r\n\ duplicate\ Objects\ being\ inserted\ into\ the\ BST\ utilizing\ the\ operate\r\n\ method\ of\ the\ TreeComparable\ Interface.\r\n\ \r\n\ @param\ \ \ Object\ to\ be\ inserted\ into\ the\ BST\r\n
comment7.params=o
comment7.target=ObjectTreeNode\ searchBST(java.lang.Object)
comment7.text=\r\n\ Searches\ the\ BST\ for\ a\ specific\ object.\r\n\ \r\n\ @param\ \ \ Object\ to\ be\ searched\ in\ the\ BST\r\n
comment8.params=tree
comment8.target=void\ preTrav(ObjectTreeNode)
comment8.text=\r\n\ Utilizes\ the\ preorder\ traversal\ method\ to\ search\ the\ BST.\ \r\n\ \r\n\ @param\ \ \ ObjectTreeNode\ to\ start\ the\ traversal\ from.\r\n
comment9.params=tree
comment9.target=void\ inTrav(ObjectTreeNode)
comment9.text=\r\n\ Utilizes\ the\ inorder\ traversal\ method\ to\ search\ the\ BST.\ \r\n\ \r\n\ @param\ \ \ ObjectTreeNode\ to\ start\ the\ traversal\ from.\r\n
numComments=12
