#BlueJ class context
comment0.target=Hash
comment0.text=\r\n\ The\ Hash\ class\ takes\ in\ a\ file\ hashWords.txt\ and\ hashes\ each\ string\ into\ a\ integer\ value\ that\r\n\ is\ input\ into\ the\ String[]\ hashTable\ via\ the\ hash\ function.\ The\ Class\ uses\ linear\ probing\ to\ \r\n\ correct\ for\ collisions.\r\n\r\n\ @author\ Joshua\ Matson\r\n\ @version\ 5/17/2019\r\n
comment1.params=pw
comment1.target=Hash(java.io.PrintWriter)
comment1.text=\r\n\ 1\ Arg\ Constructor\ of\ Class\ Hash.\r\n\ Constructs\ a\ PrintWriter\ object.\r\n
comment2.params=fileScan
comment2.target=void\ createHashTable(java.util.Scanner)
comment2.text=\r\n\ Creates\ the\ hash\ table\ using\ hashWords.txt\ as\ the\ input.\r\n\ \r\n\ @param\ \ \ file\ scanner\ to\ read\ in\ string\ input\ from\ hashWords.txt\r\n
comment3.params=line
comment3.target=void\ linearProbe(java.lang.String)
comment3.text=\r\n\ Puts\ the\ ommitted\ Strings\ into\ the\ hash\ table.\r\n\ Resolves\ collisions\ using\ linear\ probing.\r\n\ \r\n\ @param\ \ \ String\ line\ read\ in\ from\ hashWords.txt\r\n
comment4.params=s
comment4.target=boolean\ isOmmited(java.lang.String)
comment4.text=\r\n\ Checks\ if\ a\ string\ is\ part\ of\ the\ ommited\ list\ in\ the\ hash\ table.\r\n\ \r\n\ @param\ \ \ String\ to\ be\ checked\r\n\ \r\n\ @return\ \ \ \ \ \ true\ or\ false\ if\ string\ is\ ommited\ or\ not,\ respectively.\ \ \ \ \ \ \r\n
comment5.params=s
comment5.target=int\ getHash(java.lang.String)
comment5.text=\r\n\ Hash\ function\ to\ calculate\ hash\ values\ to\ input\ into\ the\ hash\ table.\r\n\ Uses\ prime\ numbers\ to\ try\ and\ differentiate\ summed\ int\ values.\r\n\ \r\n\ @param\ \ \ String\ to\ be\ hashed\r\n\ \r\n\ @return\ \ \ \ \ \ Hash\ value\r\n\ \r\n
comment6.params=
comment6.target=void\ outputTable()
comment6.text=\r\n\ Outputs\ the\ formatted\ hash\ table\ to\ console\ and\ csis.txt\r\n
comment7.params=
comment7.target=void\ getLoadFactor()
comment7.text=\r\n\ Outputs\ the\ load\ factor\ for\ the\ hash\ table.\r\n
comment8.params=
comment8.target=void\ getCollisions()
comment8.text=\r\n\ Outputs\ the\ hash\ collisions,\ resolution\ collisions,\ and\ total\ collisions.\r\n
numComments=9
